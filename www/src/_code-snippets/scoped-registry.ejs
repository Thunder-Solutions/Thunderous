import '@webcomponents/scoped-custom-element-registry';
import { createRegistry, customElement, html } from 'thunderous';

// create a scoped custom element registry
const registry = createRegistry({ scoped: true });

const ScopedElement = customElement(() => {
  return html`<div>Scoped Element</div>`;
});

// define the custom element in the registry
MyElement.register(registry).define('scoped-element');

const ParentElement = customElement(() => {
  return html`<scoped-element></scoped-element>`;
}, {
  // pass the registry to the shadow root options
  shadowRootOptions: { registry },
});

// if <scoped-element> is used outside of ParentElement, it will not render anything.
