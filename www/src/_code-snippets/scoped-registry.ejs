import { createRegistry, customElement, html } from 'thunderous';

// create a scoped custom element registry
const registry = createRegistry({ scoped: true });
console.log(registry.scoped); // true

// create a custom element
const ScopedElement = customElement(() => {
  return html`<div>Scoped Element</div>`;
});

// define the custom element in the registry
MyElement.register(registry).define('scoped-element');

// use the custom element in a parent element
const ParentElement = customElement(() => {
  return html`<scoped-element></scoped-element>`;
}, {
  // pass the registry to the shadow root options
  shadowRootOptions: { registry },
});

// The <scoped-element> inside of ParentElement will render <div>Scoped Element</div>.
// if <scoped-element> is used outside of ParentElement, it will not render anything.
